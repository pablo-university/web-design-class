* {
    margin: 0;
    padding: 0;
}


.container-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 300px 300px 150px 300px 300px;

    /* esta es una propiedad abreviada para definir lo anterior + las áreas */
    /* grid-template: 300px 300px 150px / 50% 500px; */

    /* justificamos contenido igual que como en flex */
    justify-content: space-evenly;

    /* alineamos el contenido grid dentro de nuestro contenedor
    !! Necesitamos que el contenedor tenga una altura dada sino no va a funcionar!
    */
    align-content: center;


    /* le hablamos al contenedor para decirle como se va a comportar la justificación de cada item */
    /* justify-items: stretch; */

    /* como se comporta verticalmente cada item dentro de su celda */
    /* align-items: center; */


    /* Para definir áreas dentro de nuestra grilla */
    grid-template-areas:
        "header header"
        "main main"
        "main main"
        "main main"
        "footer footer"
    ;


    /* Para dar espaciado entre columnas y filas usamos gap */
    gap: .5em;
}

.item-grid {
    background-color: rgb(0, 138, 96);
    border: 1px solid black;
    color: white;

    /*  
   Con estas dos propiedades le podemos hablar
   a cada item en específico pagrid-template-areas:
        "header header"
        "main main"
        "main main"
        "main main"ra alinearlo dentro de su propia celda
   justify-self: center;
    align-self: center; */
}

/* seleccionamos el item que cumpla con la condición de ser hijo número 1 */
.item-grid:nth-child(1) {
    background-color: brown;
    /* con esto le definimos al item cuánto espacio queremos que ocupe
    en nuestra grilla, asi mismo para diseñar cuánto ocupan en las filas */
    grid-column-start: 1;
    grid-column-end: 3;
}

.item-grid:nth-child(2) {
    background-color: cadetblue;
    /* propiedad abrevida para:
   grid-column-start
   grid-column-end
   */

    /* con span + el número, indicamos cuántos lugares queremos que ocupe */
    grid-row: 2 / span 2;
}


.item-grid:nth-child(7) {
    /* 
    grid area, define inicio de la línea de la fila, inicio de la línea columna, fin de la línea fila, fin de la línea columna,
    O como tenemos definidas las áreas, podemos simplemente indicarle lo mismo con las áreas
    
    */
    /* grid-area: footer / footer / footer / footer; */
    /* es lo mismo que lo de arriba, define los 4 valores juntos */
    grid-area: footer;
}